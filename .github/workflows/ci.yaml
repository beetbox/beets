name: ci
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9-dev]

    env:
      PY_COLORS: 1

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox sphinx

      - name: Test with tox
        if: matrix.python-version != '3.8'
        run: |
          tox -e py-test

      - name: Test with tox and get coverage
        if: matrix.python-version == '3.8'
        run: |
          tox -vv -e py-cov
        
      - name: Upload code coverage
        if: matrix.python-version == '3.8'
        run: |
          pip install codecov || true
          codecov || true

  test-docs:
    runs-on: ubuntu-latest

    env:
      PY_COLORS: 1

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: 2.7

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox sphinx

      - name: Add problem matcher
        run: echo "::add-matcher::.github/sphinx-problem-matcher.json"

      - name: Build and check docs using tox
        run: tox -e docs

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox sphinx

      - name: Add problem matcher
        run: echo "::add-matcher::.github/flake8-problem-matcher.json"

      - name: Lint with flake8
        run: tox -e py-lint
